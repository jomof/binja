syntax = "proto3";
package binja;

message CompiledBuildNinja {
    repeated ParseNode parse_node = 1;
    repeated ParseRule rule = 2;
    repeated ParseEdge edge = 3;
    repeated ParseDefault default = 4;
    repeated ParsePool pool = 5;
    repeated ParseBinding binding = 6;
    repeated ParseInclude include = 7;
}

message ParseNode {
  enum Type {
    RULE = 0;
    EDGE = 1;
    DEFAULT = 2;
    POOL = 3;
    BINDING = 4;
    INCLUDE = 5;
  }
  Type type = 1;
  int64 table_offset = 2;
}

message ParseStringPiece {
    enum Type {
        RAW = 0;
        SPECIAL = 1;
    }
    Type type = 1;
    string value = 2;
}

message ParseEvalString {
    repeated ParseStringPiece piece = 1;
}

message ParseBinding {
  string key = 1;
  ParseEvalString depth = 2;
}

message ParseRule {
  string name = 1;
  repeated ParseBinding binding = 2;
}

message ParseEdge {
  string name = 1;
  repeated ParseEvalString out = 2;
  int64 implicit_out_count = 3;
  repeated ParseEvalString in = 4;
  int64 implicit_in_count = 5;
  int64 order_only_in_count = 6;
  repeated ParseEvalString validations = 7;
  repeated ParseEvalString bindings = 8;
}

message ParsePool {
  string name = 1;
  ParseEvalString depth = 2;
}

message ParseDefault {
  repeated ParseEvalString default = 1;
}

message ParseInclude {
  bool new_scope = 1;
  ParseEvalString path = 2;
}
